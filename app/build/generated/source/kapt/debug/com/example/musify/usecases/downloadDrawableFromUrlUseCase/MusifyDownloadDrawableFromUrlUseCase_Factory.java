// Generated by Dagger (https://dagger.dev).
package com.example.musify.usecases.downloadDrawableFromUrlUseCase;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MusifyDownloadDrawableFromUrlUseCase_Factory implements Factory<MusifyDownloadDrawableFromUrlUseCase> {
  private final Provider<CoroutineDispatcher> ioDispatcherProvider;

  public MusifyDownloadDrawableFromUrlUseCase_Factory(
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    this.ioDispatcherProvider = ioDispatcherProvider;
  }

  @Override
  public MusifyDownloadDrawableFromUrlUseCase get() {
    return newInstance(ioDispatcherProvider.get());
  }

  public static MusifyDownloadDrawableFromUrlUseCase_Factory create(
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    return new MusifyDownloadDrawableFromUrlUseCase_Factory(ioDispatcherProvider);
  }

  public static MusifyDownloadDrawableFromUrlUseCase newInstance(CoroutineDispatcher ioDispatcher) {
    return new MusifyDownloadDrawableFromUrlUseCase(ioDispatcher);
  }
}
