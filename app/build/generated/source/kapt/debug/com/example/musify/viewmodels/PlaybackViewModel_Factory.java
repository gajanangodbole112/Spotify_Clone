// Generated by Dagger (https://dagger.dev).
package com.example.musify.viewmodels;

import android.app.Application;
import com.example.musify.musicplayer.MusicPlayerV2;
import com.example.musify.usecases.downloadDrawableFromUrlUseCase.DownloadDrawableFromUrlUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlaybackViewModel_Factory implements Factory<PlaybackViewModel> {
  private final Provider<Application> applicationProvider;

  private final Provider<MusicPlayerV2> musicPlayerProvider;

  private final Provider<DownloadDrawableFromUrlUseCase> downloadDrawableFromUrlUseCaseProvider;

  public PlaybackViewModel_Factory(Provider<Application> applicationProvider,
      Provider<MusicPlayerV2> musicPlayerProvider,
      Provider<DownloadDrawableFromUrlUseCase> downloadDrawableFromUrlUseCaseProvider) {
    this.applicationProvider = applicationProvider;
    this.musicPlayerProvider = musicPlayerProvider;
    this.downloadDrawableFromUrlUseCaseProvider = downloadDrawableFromUrlUseCaseProvider;
  }

  @Override
  public PlaybackViewModel get() {
    return newInstance(applicationProvider.get(), musicPlayerProvider.get(), downloadDrawableFromUrlUseCaseProvider.get());
  }

  public static PlaybackViewModel_Factory create(Provider<Application> applicationProvider,
      Provider<MusicPlayerV2> musicPlayerProvider,
      Provider<DownloadDrawableFromUrlUseCase> downloadDrawableFromUrlUseCaseProvider) {
    return new PlaybackViewModel_Factory(applicationProvider, musicPlayerProvider, downloadDrawableFromUrlUseCaseProvider);
  }

  public static PlaybackViewModel newInstance(Application application, MusicPlayerV2 musicPlayer,
      DownloadDrawableFromUrlUseCase downloadDrawableFromUrlUseCase) {
    return new PlaybackViewModel(application, musicPlayer, downloadDrawableFromUrlUseCase);
  }
}
