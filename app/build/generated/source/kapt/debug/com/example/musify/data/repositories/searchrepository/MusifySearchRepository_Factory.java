// Generated by Dagger (https://dagger.dev).
package com.example.musify.data.repositories.searchrepository;

import androidx.paging.PagingConfig;
import com.example.musify.data.remote.musicservice.SpotifyService;
import com.example.musify.data.repositories.tokenrepository.TokenRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MusifySearchRepository_Factory implements Factory<MusifySearchRepository> {
  private final Provider<TokenRepository> tokenRepositoryProvider;

  private final Provider<SpotifyService> spotifyServiceProvider;

  private final Provider<PagingConfig> pagingConfigProvider;

  public MusifySearchRepository_Factory(Provider<TokenRepository> tokenRepositoryProvider,
      Provider<SpotifyService> spotifyServiceProvider,
      Provider<PagingConfig> pagingConfigProvider) {
    this.tokenRepositoryProvider = tokenRepositoryProvider;
    this.spotifyServiceProvider = spotifyServiceProvider;
    this.pagingConfigProvider = pagingConfigProvider;
  }

  @Override
  public MusifySearchRepository get() {
    return newInstance(tokenRepositoryProvider.get(), spotifyServiceProvider.get(), pagingConfigProvider.get());
  }

  public static MusifySearchRepository_Factory create(
      Provider<TokenRepository> tokenRepositoryProvider,
      Provider<SpotifyService> spotifyServiceProvider,
      Provider<PagingConfig> pagingConfigProvider) {
    return new MusifySearchRepository_Factory(tokenRepositoryProvider, spotifyServiceProvider, pagingConfigProvider);
  }

  public static MusifySearchRepository newInstance(TokenRepository tokenRepository,
      SpotifyService spotifyService, PagingConfig pagingConfig) {
    return new MusifySearchRepository(tokenRepository, spotifyService, pagingConfig);
  }
}
