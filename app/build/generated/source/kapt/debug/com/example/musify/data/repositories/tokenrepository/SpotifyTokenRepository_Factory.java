// Generated by Dagger (https://dagger.dev).
package com.example.musify.data.repositories.tokenrepository;

import com.example.musify.data.encoder.Base64Encoder;
import com.example.musify.data.remote.token.tokenmanager.TokenManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SpotifyTokenRepository_Factory implements Factory<SpotifyTokenRepository> {
  private final Provider<TokenManager> tokenManagerProvider;

  private final Provider<Base64Encoder> base64EncoderProvider;

  public SpotifyTokenRepository_Factory(Provider<TokenManager> tokenManagerProvider,
      Provider<Base64Encoder> base64EncoderProvider) {
    this.tokenManagerProvider = tokenManagerProvider;
    this.base64EncoderProvider = base64EncoderProvider;
  }

  @Override
  public SpotifyTokenRepository get() {
    return newInstance(tokenManagerProvider.get(), base64EncoderProvider.get());
  }

  public static SpotifyTokenRepository_Factory create(Provider<TokenManager> tokenManagerProvider,
      Provider<Base64Encoder> base64EncoderProvider) {
    return new SpotifyTokenRepository_Factory(tokenManagerProvider, base64EncoderProvider);
  }

  public static SpotifyTokenRepository newInstance(TokenManager tokenManager,
      Base64Encoder base64Encoder) {
    return new SpotifyTokenRepository(tokenManager, base64Encoder);
  }
}
